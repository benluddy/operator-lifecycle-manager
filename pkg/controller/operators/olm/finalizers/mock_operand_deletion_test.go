// Code generated by MockGen. DO NOT EDIT.
// Source: operand_deletion.go

// Package finalizers is a generated GoMock package.
package finalizers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/operator-framework/api/pkg/operators/v1alpha1"
	resolver "github.com/operator-framework/operator-lifecycle-manager/pkg/controller/registry/resolver"
	v1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

// MockResourceDeleter is a mock of resourceDeleter interface.
type MockResourceDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockResourceDeleterMockRecorder
}

// MockResourceDeleterMockRecorder is the mock recorder for MockResourceDeleter.
type MockResourceDeleterMockRecorder struct {
	mock *MockResourceDeleter
}

// NewMockResourceDeleter creates a new mock instance.
func NewMockResourceDeleter(ctrl *gomock.Controller) *MockResourceDeleter {
	mock := &MockResourceDeleter{ctrl: ctrl}
	mock.recorder = &MockResourceDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceDeleter) EXPECT() *MockResourceDeleterMockRecorder {
	return m.recorder
}

// DeleteResources mocks base method.
func (m *MockResourceDeleter) DeleteResources(crd *v1.CustomResourceDefinition, namespaces resolver.NamespaceSet) ([]v1alpha1.ResourceInstance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteResources", crd, namespaces)
	ret0, _ := ret[0].([]v1alpha1.ResourceInstance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteResources indicates an expected call of DeleteResources.
func (mr *MockResourceDeleterMockRecorder) DeleteResources(crd, namespaces interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteResources", reflect.TypeOf((*MockResourceDeleter)(nil).DeleteResources), crd, namespaces)
}

// MockCustomResourceDefinitionGetter is a mock of customResourceDefinitionGetter interface.
type MockCustomResourceDefinitionGetter struct {
	ctrl     *gomock.Controller
	recorder *MockCustomResourceDefinitionGetterMockRecorder
}

// MockCustomResourceDefinitionGetterMockRecorder is the mock recorder for MockCustomResourceDefinitionGetter.
type MockCustomResourceDefinitionGetterMockRecorder struct {
	mock *MockCustomResourceDefinitionGetter
}

// NewMockCustomResourceDefinitionGetter creates a new mock instance.
func NewMockCustomResourceDefinitionGetter(ctrl *gomock.Controller) *MockCustomResourceDefinitionGetter {
	mock := &MockCustomResourceDefinitionGetter{ctrl: ctrl}
	mock.recorder = &MockCustomResourceDefinitionGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomResourceDefinitionGetter) EXPECT() *MockCustomResourceDefinitionGetterMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCustomResourceDefinitionGetter) Get(name string) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCustomResourceDefinitionGetterMockRecorder) Get(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCustomResourceDefinitionGetter)(nil).Get), name)
}

// MockDeletableResourceDefinitionGetter is a mock of deletableResourceDefinitionGetter interface.
type MockDeletableResourceDefinitionGetter struct {
	ctrl     *gomock.Controller
	recorder *MockDeletableResourceDefinitionGetterMockRecorder
}

// MockDeletableResourceDefinitionGetterMockRecorder is the mock recorder for MockDeletableResourceDefinitionGetter.
type MockDeletableResourceDefinitionGetterMockRecorder struct {
	mock *MockDeletableResourceDefinitionGetter
}

// NewMockDeletableResourceDefinitionGetter creates a new mock instance.
func NewMockDeletableResourceDefinitionGetter(ctrl *gomock.Controller) *MockDeletableResourceDefinitionGetter {
	mock := &MockDeletableResourceDefinitionGetter{ctrl: ctrl}
	mock.recorder = &MockDeletableResourceDefinitionGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeletableResourceDefinitionGetter) EXPECT() *MockDeletableResourceDefinitionGetterMockRecorder {
	return m.recorder
}

// GetDeletableResourceDefinitions mocks base method.
func (m *MockDeletableResourceDefinitionGetter) GetDeletableResourceDefinitions(csv *v1alpha1.ClusterServiceVersion) ([]*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeletableResourceDefinitions", csv)
	ret0, _ := ret[0].([]*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeletableResourceDefinitions indicates an expected call of GetDeletableResourceDefinitions.
func (mr *MockDeletableResourceDefinitionGetterMockRecorder) GetDeletableResourceDefinitions(csv interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeletableResourceDefinitions", reflect.TypeOf((*MockDeletableResourceDefinitionGetter)(nil).GetDeletableResourceDefinitions), csv)
}

// MockFinalizerRemover is a mock of finalizerRemover interface.
type MockFinalizerRemover struct {
	ctrl     *gomock.Controller
	recorder *MockFinalizerRemoverMockRecorder
}

// MockFinalizerRemoverMockRecorder is the mock recorder for MockFinalizerRemover.
type MockFinalizerRemoverMockRecorder struct {
	mock *MockFinalizerRemover
}

// NewMockFinalizerRemover creates a new mock instance.
func NewMockFinalizerRemover(ctrl *gomock.Controller) *MockFinalizerRemover {
	mock := &MockFinalizerRemover{ctrl: ctrl}
	mock.recorder = &MockFinalizerRemoverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFinalizerRemover) EXPECT() *MockFinalizerRemoverMockRecorder {
	return m.recorder
}

// RemoveFinalizer mocks base method.
func (m *MockFinalizerRemover) RemoveFinalizer(csv *v1alpha1.ClusterServiceVersion) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveFinalizer", csv)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveFinalizer indicates an expected call of RemoveFinalizer.
func (mr *MockFinalizerRemoverMockRecorder) RemoveFinalizer(csv interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveFinalizer", reflect.TypeOf((*MockFinalizerRemover)(nil).RemoveFinalizer), csv)
}
